//
//  SearchViewController.swift
//  PlayCleanSwift
//
//  Created by Ari Supriatna on 05/09/19.
//  Copyright (c) 2019 Ari Supriatna. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SwiftyJSON

protocol SearchDisplayLogic: class
{
  func displaySearchMeal(viewModel: Search.FetchSearchMeal.ViewModel)
}

class SearchViewController: UIViewController, SearchDisplayLogic,
  UITableViewDelegate, UITableViewDataSource, UISearchBarDelegate
{
  var interactor: SearchBusinessLogic?
  var router: (NSObjectProtocol & SearchRoutingLogic & SearchDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = SearchInteractor()
    let presenter = SearchPresenter()
    let router = SearchRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSearchMeal()
    
    searchMealBar.delegate = self
  }
  
  // MARK: Search Meals
  @IBOutlet weak var searchMealBar: UISearchBar!
  @IBOutlet weak var tableView: UITableView!
  
  var dataSearchMeal: JSON = []
  
  // MARK: TableViewDataSource
  func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
    return dataSearchMeal.count
  }
  
  func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
    let cell = tableView.dequeueReusableCell(withIdentifier: "Cell", for: indexPath)
    
    cell.textLabel?.text = dataSearchMeal[indexPath.row]["strMeal"].stringValue
    
    return cell
  }
  
  func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
    tableView.deselectRow(at: indexPath, animated: true)
    
    let foodName = dataSearchMeal[indexPath.row]["strMeal"].stringValue
    
    router?.routeToFoodDetail(foodName: foodName)
  }
  
  func searchBar(_ searchBar: UISearchBar, textDidChange searchText: String) {
    // search bar
    let request = Search.FetchSearchMeal.Request(name: searchText)
    interactor?.doFetchSearchFood(request: request)
  }
  
  func doSearchMeal()
  {
    let request = Search.FetchSearchMeal.Request(name: "Tomato")
    interactor?.doFetchSearchFood(request: request)
  }
  
  func displaySearchMeal(viewModel: Search.FetchSearchMeal.ViewModel)
  {
    dataSearchMeal = viewModel.displayedData
    
    tableView.reloadData()
  }
}
